security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true

    password_hashers:
        App\Entity\Utilisateur:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            login_throttling:
                max_attempts: 3
            guard:
                provider: app_user_provider
                authenticators:
                    - App\Security\LoginAuthenticator
            provider: app_user_provider
            logout:
                path: app_logout
                target: app_login

                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: '^/connexion', roles: PUBLIC_ACCESS }
        - { path: ^/ch, roles: [ROLE_SAISIE, ROLE_CHAN, ROLE_CEM, ROLE_ADMIN] }
        - { path: ^/b1, roles: [ROLE_B1] }
        - { path: ^/admin, roles: [ROLE_SUPER_ADMIN,ROLE_CEM, ROLE_ADMIN] }
        - { path: ^/cf, roles: [ROLE_SPA] }   # Espace Chef de formation
        - { path: ^/spa, roles: [ROLE_SPA] }   # Espace Chef de formation
        # - { path: ^/profile, roles: ROLE_USER }
